import FontAwesome from "@expo/vector-icons/FontAwesome";
import { Link, Tabs } from "expo-router";
<% if (props.stylingPackage?.name === "unistyles") { %>
import { createStyleSheet, useStyles } from 'react-native-unistyles'
import { Pressable } from 'react-native';
<% } else { %>
import { Pressable, StyleSheet } from "react-native";
<% } %>

function TabBarIcon(props: {
  name: React.ComponentProps<typeof FontAwesome>["name"];
  color: string;
}) {
  <% if (props.stylingPackage?.name === "unistyles") { %>
  const {styles} = useStyles(stylesheet)
  <% } %>
  return <FontAwesome size={28} style={styles.tabBarIcon} {...props} />;
}

export default function TabLayout() {
  <% if (props.stylingPackage?.name === "unistyles") { %>
  const { styles } = useStyles(stylesheet)
  <% } %>
  return (
    <Tabs
      screenOptions={{
        tabBarActiveTintColor: 'black',
      }}>
      <Tabs.Screen
        name='index'
        options={{
          title: 'Tab One',
          tabBarIcon: ({ color }) => <TabBarIcon name='code' color={color} />,
          headerRight: () => (
            <Link href='/modal' asChild>
              <Pressable>
                {({ pressed }) => (
                  <FontAwesome
                    name='info-circle'
                    size={25}
                    color='gray'
                    style={[styles.headerRight, { opacity: pressed ? 0.5 : 1 }]}
                  />
                )}
              </Pressable>
            </Link>
          ),
        }}
      />
      <Tabs.Screen
        name="two"
        options={{
          title: "Tab Two",
          tabBarIcon: ({ color }) => <TabBarIcon name="code" color={color} />,
        }}
      />
    </Tabs>
  );
}

<% if (props.stylingPackage?.name === "unistyles") { %>
const stylesheet = createStyleSheet({
  headerRight: {
    marginRight: 15
  },
  tabBarIcon: {
    marginBottom: -3
  }
});
<% } else { %>
const styles = StyleSheet.create({
  headerRight: {
    marginRight: 15
  },
  tabBarIcon: {
    marginBottom: -3
  }
});
<% } %>